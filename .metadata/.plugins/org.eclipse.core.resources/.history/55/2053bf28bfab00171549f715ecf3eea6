$(document).ready(function(){
	$("#must_1").append(modelCentralTask());
	$('#anexo').change( function(event) {
		var anexo = URL.createObjectURL(event.target.files[0]);
		console.log(anexo);
	});
});

getColleagues = function(param=''){
	try{
		if(typeof param == 'object'){
			var multi = param['multi'];
			var filtro = new Array();
			if(multi != true){
				for(i = 0; i < multi; i++){
					filtro.push(DatasetFactory.createConstraint(param[i]['campo'],param[i]['constraint'],param[i]['constraint'],param[i]['tipo']))
				}
			}else{
				filtro.push(DatasetFactory.createConstraint(param['campo'],param['constraint'],param['constraint'],param['tipo']));
			}			
		}else{
			filtro = null
		}
		var consulta = DatasetFactory.getDataset('colleague',null,filtro,null);
		return consulta;
	}catch(e){
		var objMsg = {
					'titulo': 'Ops!',
					'msg': 'Erro ao consultar registros',
					'tipo': 'danger'
				}
		messages(objMsg);
		throw e;
	}
}

messages = function(obj){
	FLUIGC.toast({
        title: obj['titulo'],
        message: obj['msg'],
        type: obj['tipo']
    });
}

modelStatus = function(){
	var template = {
			'texto': 'texto AQUI'
	}

	var painel = '<section class="container-fluid" id="status">'
			   + '	<div class="row">'
			   + '		<div class="col-md-6">'
			   + '			<div style="background-color:red;height:80px!important">'
			   + '				<label>{{texto}}</label>'
			   + '			</div>'
			   + '		</div>'
			   + '	</div>'
			   + '</section>';

	Mustache.render(painel,template);
}

modelCentralTask = function(){
	var template = {
			'texto': 'texto AQUI',
			'solicitar': 'initModalSolicitacao()'
	}

	var painel = '<section class="container-fluid" id="centralTask">'
	 		   + '	<div class="row">'
			   + '		<div class="col-md-6">'
			   + '			<div id="notify">'
			   + '				<ul class="list-group">'
			   + '				    <li class="list-group-item">'
			   + '					        <span class="badge badge-warning">14</span>'
			   + '				        Cras justo odio'
			   + '					    </li>'
			   + '					    <li class="list-group-item">'
			   + '					        <span class="badge badge-danger">2</span>'
			   + '					        Dapibus ac facilisis in'
			   + '					    </li>'
			   + '					    <li class="list-group-item">'
			   + '					        <span class="badge badge-info">1</span>'
			   + '					        Morbi leo risus'
			   + '					    </li>'
			   + '					    <li class="list-group-item">'
			   + '					        <span class="badge badge-success">4</span>'
			   + '					        Amet veritum statum'
			   + '					    </li>'
			   + '					</ul>'
			   + '			</div>'
			   + '		</div>'
			   + '	</div>'
			   + '	<div class="row">'
			   + '		<div class="col-md-6">'
			   + '			<div id="actions">'
			   + '				<button class="btn btn-success btn-sm" onclick="{{solicitar}}">Iniciar solicitação</button>'
			   + '			</div>'
			   + '		</div>'
			   + '	</div>'
			   + '</section>';

	return Mustache.render(painel,template);
}

initModalSolicitacao = function(){
	FLUIGC.modal({
	    title: 'Title',
	    content: modelCamposModal,
	    id: 'fluig-modal',
	    actions: [{
	        'label': 'Save',
	        'bind': 'onclick="validaCampos();"',
	    },{
	        'label': 'Close',
	        'autoClose': true
	    }]
	}, function(err, data) {
	    if(err) {
	        // do error handling
	    } else {
	        // do something with data
	    }
	});
}

modelCamposModal = function(){
	var consulta = DatasetFactory.getDataset('tipoDeArquivo',null,null,null);
	var options = '<option value="default">Selecione</option>';
		for(i = 0; i < consulta.values.length; i++){
			options += '<option value="'+consulta.values[i]['tipoDocumento']+'">'+consulta.values[i]['tipoDocumento']+'</option>';
		}
			
	var template = {
			'input-class': 'form-control input-sm',
			'options': options
	}

	var painel = '<section class="container-fluid" id="modalSolicitacao">'
			   + '	<div class="row">'
			   + '		<div class="col-md-6">'
			   + '			<label>Tipo do contrato</label>'
			   + '			<select class="{{input-class}}" id="tipoContrato" >'
			   +  options
			   + '			</select>'
			   + '		</div>'
			   + '		<div class="col-md-6">'
			   + '			<label>Inicio Previsto</label>'
			   + '			<input type="text" class="{{input-class}}" id="inicioPrevisto"/>'
			   + '		</div>'
			   + '	</div>'
			   + '	<div class="row">'
			   + '		<div class="col-md-6">'
			   + '			<label>Area do processo</label>'
			   + '			<input type="text" class="{{input-class}}" id="areaProcesso"/>'
			   + '		</div>'
			   + '		<div class="col-md-6">'
			   + '			<label>Vigência</label>'
			   + '			<input type="text" class="{{input-class}}" id="vigencia"/>'
			   + '		</div>'
			   + '	</div>'			   
			   + '	<div class="row">'
			   + '		<div class="col-md-6">'
			   + '			<label>Fornecedor</label>'
			   + '			<input type="text" class="{{input-class}}" id="fornecedor"/>'
			   + '		</div>'
			   + '		<div class="col-md-6">'
			   + '			<label>Contato Fornecedor</label>'
			   + '			<input type="text" class="{{input-class}}" id="contatoFornecedor"/>'
			   + '		</div>'
			   + '	</div>'
			   + '	<div class="row">'
			   + '		<div class="col-md-6">'
			   + '			<label>Mediador</label>'
			   + '			<input type="text" class="{{input-class}}" id="mediador"/>'
			   + '		</div>'
			   + '		<div class="col-md-6">'
			   + '			<label>Vai para cartório?</label>'
			   + '			<select class="{{input-class}}" id="cartorio">'
			   + '				<option value="default">Selecione</option>'
			   + '				<option value="sim">Sim</option>'
			   + '				<option value="nao">Não</option>'
			   + '			</select>'
			   + '		</div>'
			   + '	</div>'
			    + '	<div class="row">'
			   + '		<div class="col-md-12">'
			   + '			<label>Anexar</label>'
			   + '			<input type="file" class="{{input-class}}" id="anexo"/>'
			   + '		</div>'
			   + '	</div>'
			   + '</section>';

	return Mustache.render(painel,template);
}

getBase64 = function(elem){
	var reader = new FileReader();
	   reader.readAsDataURL(elem);
	   reader.onload = function () {
	     console.log(reader.result);
	   };
	   reader.onerror = function (error) {
	     console.log('Error: ', error);
	   };
}

validaCampos = function(){
	var evt = $('#anexo');
	var f = evt[0].files[0];
		//f = URL.createObjectURL(f);
		//console.log(f);
		//console.log(getBase64(f));
		//console.log(getBase64(evt));
		f = 'PGh0bWw+CjxoZWFkPgoJPGxpbmsgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL3BvcnRhbC9yZXNvdXJjZXMvc3R5bGUtZ3VpZGUvY3NzL2ZsdWlnLXN0eWxlLWd1aWRlLm1pbi5jc3MiLz4KCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9wb3J0YWwvcmVzb3VyY2VzL2pzL2pxdWVyeS9qcXVlcnkuanMiPjwvc2NyaXB0PgoJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3BvcnRhbC9yZXNvdXJjZXMvanMvanF1ZXJ5L2pxdWVyeS11aS5taW4uanMiPjwvc2NyaXB0PgoJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3BvcnRhbC9yZXNvdXJjZXMvanMvbXVzdGFjaGUvbXVzdGFjaGUtbWluLmpzIj48L3NjcmlwdD4KCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9wb3J0YWwvcmVzb3VyY2VzL3N0eWxlLWd1aWRlL2pzL2ZsdWlnLXN0eWxlLWd1aWRlLm1pbi5qcyIgY2hhcnNldD0idXRmLTgiPjwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5Pgo8ZGl2IGNsYXNzPSJmbHVpZy1zdHlsZS1ndWlkZSI+Cjxmb3JtIG5hbWU9ImZvcm0iIHJvbGU9ImZvcm0iPgoKPGRpdiBjbGFzcz0icm93Ij4KCTxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KCQk8bGFiZWw+VGlwbyBkbyBjb250cmF0bzo8L2xhYmVsPgoJCTxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIj4KCSAgICAJPGlucHV0IGNsYXNzPSJmb3JtLWNvbnRyb2wiIHR5cGU9InRleHQiIG5hbWU9InRpcG9Db250cmF0byIgaWQ9InRpcG9Db250cmF0byIvPgoJCTwvZGl2PgoJCQoJCTxsYWJlbD7BcmVhIGRvIHByb2Nlc3NvPC9sYWJlbD4KCQk8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cCI+CgkgICAgCTxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sIiB0eXBlPSJ0ZXh0IiBuYW1lPSJhcmVhUHJvY2Vzc28iIGlkPSJhcmVhUHJvY2Vzc28iLz4JICAgIAkKCQk8L2Rpdj4KCQkKCQk8bGFiZWw+TWVkaWFkb3I6PC9sYWJlbD4KCQk8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cCI+CgkgICAgCTxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sIiB0eXBlPSJ0ZXh0IiBuYW1lPSJtZWRpYWRvciIgaWQ9Im1lZGlhZG9yIi8+CgkJPC9kaXY+CgkJCgkJPGxhYmVsPkZvcm5lY2Vkb3I6PC9sYWJlbD4KCQk8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cCI+CgkgICAgCTxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sIiB0eXBlPSJ0ZXh0IiBuYW1lPSJmb3JuZWNlZG9yIiBpZD0iZm9ybmVjZWRvciIvPgoJCTwvZGl2PgkKCQkKCQk8bGFiZWw+Q29udGF0byBmb3JuZWNlZG9yOjwvbGFiZWw+CgkJPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPgoJICAgIAk8aW5wdXQgY2xhc3M9ImZvcm0tY29udHJvbCIgdHlwZT0idGV4dCIgbmFtZT0iY29udGF0b0Zvcm5lY2Vkb3IiIGlkPSJjb250YXRvRm9ybmVjZWRvciIvPgoJCTwvZGl2PgoJCQoJCTxsYWJlbD5Jbu1jaW8gcHJldmlzdG86PC9sYWJlbD4KCQk8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cCI+CgkgICAgCTxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sIiB0eXBlPSJ0ZXh0IiBuYW1lPSJpbmljaW9QcmV2aXN0byIgaWQ9ImluaWNpb1ByZXZpc3RvIi8+CgkJPC9kaXY+CgkJCgkJPGxhYmVsPlZpZ+puY2lhOjwvbGFiZWw+CgkJPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPgoJICAgIAk8aW5wdXQgY2xhc3M9ImZvcm0tY29udHJvbCIgdHlwZT0idGV4dCIgbmFtZT0idmlnZW5jaWEiIGlkPSJ2aWdlbmNpYSIvPgoJCTwvZGl2PgoJCQoJCTxsYWJlbD5PYnNlcnZh5/Vlczo8L2xhYmVsPgoJCTxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIj4KCSAgICAJPHRleHRhcmVhIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHR5cGU9InRleHQiIG5hbWU9Im9ic2VydmFjb2VzIiBpZD0ib2JzZXJ2YWNvZXMiLz48L3RleHRhcmVhPgoJCTwvZGl2PgoJCQoJCTxsYWJlbD5BcHJvdmHn428gZ2VzdG9yOjwvbGFiZWw+CgkJPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPgoJICAgIAk8aW5wdXQgY2xhc3M9ImZvcm0tY29udHJvbCIgdHlwZT0idGV4dCIgbmFtZT0iYXByb3ZHZXN0b3IiIGlkPSJhcHJvdkdlc3RvciIvPgoJCTwvZGl2PgoJCQoJCTxsYWJlbD5BcHJvdmHn428gYWRtOjwvbGFiZWw+CgkJPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPgoJICAgIAk8aW5wdXQgY2xhc3M9ImZvcm0tY29udHJvbCIgdHlwZT0idGV4dCIgbmFtZT0iYXByb3ZBZG0iIGlkPSJhcHJvdkFkbSIvPgoJCTwvZGl2PgoJCTxsYWJlbD5BcHJvdmHn428ganVyaWRpY286PC9sYWJlbD4KCQk8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cCI+CgkgICAgCTxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sIiB0eXBlPSJ0ZXh0IiBuYW1lPSJhcHJvdkp1cmlkaWNvIiBpZD0iYXByb3ZKdXJpZGljbyIvPgoJCTwvZGl2PgoJPC9kaXY+CjwvZGl2PgkKCjwvZm9ybT4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==';
	var anexo = [{
            		'item':[{            			
            			'attachments':[{
            				'attach':true,
	            			'descriptor':'Anexo',
	            			'editing':true,
	            			'fileName':'teste.txt',
	            			'fileSize':0,
	            			'filecontent':f,
	            			'principal':true,
			                'deleted': false,
			                'newAttach': true
		                 }],
		                 'colleagueId':'fluig',	
		                 'colleagueName':'fluig',
		                 'companyId': 1,
		                 'description':'Teste Inicio',
		                 'size': 0	                
		               }]
	                }];

	                console.log('anexo -->',anexo);
	var dados = {
		'tipoContrato': $('#tipoContrato option:selected').text(), 
		'inicioPrevisto': $("#inicioPrevisto").val(),
		'areaProcesso': $("#areaProcesso").val(),
		'vigencia': $("#vigencia").val(),
		'fornecedor': $("#fornecedor").val(),
		'contatoFornecedor': $("#contatoFornecedor").val(),
		'mediador': $("#mediador").val(),
		'cartorio': $("#cartorio option:selected").text()
	}
	startProcess(dados,f);
}


startProcess = function (dados,anexo){
	var prm = new SOAPClientParameters();
		prm.add("username", "fluig");
		prm.add("password", "fluig");
		prm.add("companyId", "1");
		prm.add("processId", "naoEfrancis");
		prm.add("comments", 'TESTE');
		prm.add("userId", 'fluig');
		prm.add('attachmentSequence',0);
		prm.add("attachments", anexo);
		prm.add("cardData", [
			'item':[
				{field:'tipoContrato',value:dados['tipoContrato']},
				{field:'inicioPrevisto',value:dados['inicioPrevisto']},
				{field:'areaProcesso',value:dados['areaProcesso']},
				{field:'vigencia',value:dados['vigencia']},
				{field:'fornecedor',value:dados['fornecedor']},
				{field:'contatoFornecedor',value:dados['contatoFornecedor']},
				{field:'mediador',value:dados['mediador']},
				{field:'cartorio',value:dados['cartorio']}	
				]]);
	try{
		var jsonText = SOAPClient.invoke("http://fluig11.hackathon2017.fluig.io:8080/webdesk/ECMWorkflowEngineService", "simpleStartProcess", prm, false, null, "result").json;
		console.warn(jsonText);
		var jsonResult = jsonText.split('result').join('"result"');
			jsonResult = jsonResult.split('key').join('"key"');
			jsonResult = jsonResult.split('value').join('"value"');
			jsonResult = $.parseJSON(jsonResult);
		console.log(jsonResult);
	}catch(e){
		console.warn(jsonText);
		throw e
	}
}
